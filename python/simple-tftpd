#!/usr/bin/env python
#psychomario - https://github.com/psychomario

import socket,binascii,os
from math import ceil
from sys import exit
from optparse import OptionParser

parser = OptionParser(description='%prog - a simple TFTP server', usage='%prog [options]')
parser.add_option("-p", "--port", dest="port", action="store", help='port to bind (default 69).')
parser.add_option("-t", "--timeout", dest="timeout", action="store", help='number of seconds to wait for a reply (default 0).')

(options, args) = parser.parse_args()

if options.port:
    port = int(options.port)
else:
    port = int('69')

if options.timeout:
    timeout = int(options.timeout)
else:
    timeout = 0

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
if timeout > 0: s.settimeout(timeout)
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
s.bind(('', port))

def group(s, n): return [s[i:i+n] for i in xrange(0, len(s), n)]
last=()
while 1:
    try:
        message, address = s.recvfrom(8192)
        if last == address: continue
        if message.startswith('\x00\x01'): #WRQ
           message=message.split('\x00')
           filename=message[1][1:]
           print address,"wants",repr(filename)
           if not os.path.exists(filename):
              s.sendto('\x00\x05\x00\x01no such file exists',address)
              continue
           fsize=os.path.getsize(filename)
           s.sendto('\x00\x06blksize\x00512\x00tsize\x00%s\x00' % fsize,address)
        elif message.startswith('\x00\x04'): #OptACK
           last=address
           f=open(filename,'r')
           data=f.read()
           dataset=group(data,512)
           if len(dataset) > 65534: print "Won't work, too large... >64MB"
           for index,chunk in enumerate(dataset):
              try:
                 s.sendto('\x00\x03'+binascii.unhexlify(hex(index+1)[2:].rjust(4,'0'))+chunk,address)
              except TypeError:
                 break
              s.recvfrom(128)
           s.sendto('\x00\x03'+binascii.unhexlify(hex(index+2)[2:].rjust(4,'0')),address)
           f.close()
    except KeyboardInterrupt:
        exit()
