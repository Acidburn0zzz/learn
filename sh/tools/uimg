#!/bin/sh
#description: uploads imgs to http://imgur.com
#usage: uimg img.png

#example: uimg img.png
#http://i.imgur.com/image.png

_usage()
{
    printf "%s\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') image.[png|jpg] ..." >&2
    printf "%s\\n" "Upload images to http://imgur.com." >&2
    exit 1
}

_uimg()
{
    for _uimg__img; do
        if [ -f "${_uimg__img}" ] ; then
            case "${_uimg__img}" in
                *.jpg|*.JPG|*.jpeg|*.png|*.PNG)
                    if command -v "xclip" >/dev/null 2>&1; then
                        if [ ! -t 1 ] || [ -z "${DISPLAY}" ]; then
                            curl -s -F "image=@${_uimg__img}"                   \
                                -F "key=486690f872c678126a2c09a9e196ce1b"          \
                                http://imgur.com/api/upload.xml |                  \
                                egrep -o "<original_image>(.)*</original_image>" | \
                                egrep -o "http://i.imgur.com/[^<]*"
                        else
                            curl -s -F "image=@${_uimg__img}"                   \
                                -F "key=486690f872c678126a2c09a9e196ce1b"          \
                                http://imgur.com/api/upload.xml |                  \
                                egrep -o "<original_image>(.)*</original_image>" | \
                                egrep -o "http://i.imgur.com/[^<]*" | xclip -selection clipboard; xclip -o -selection clipboard
                        fi
                    else
                        curl -s -F "image=@${_uimg__img}"                   \
                            -F "key=486690f872c678126a2c09a9e196ce1b"          \
                            http://imgur.com/api/upload.xml |                  \
                            egrep -o "<original_image>(.)*</original_image>" | \
                            egrep -o "http://i.imgur.com/[^<]*"
                    fi ;;
                *)  printf "%s\\n" "'${_uimg__img}' is not a valid image file" >&2 ;;
            esac
        else
            printf "%s\\n" "'${_uimg__img}' doesn't exist" >&2
        fi
    done
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- "${@}" $(cat)
fi

[ "${#}" -eq "0" ] && _usage

for arg in "${@}"; do #parse options
    case "${arg}" in
        --) shift; break  ;;
        -h|--help) _usage ;;
        -*) printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): unrecognized option \`${arg}'" >&2; _usage ;;
    esac
done

if ! command -v "curl" >/dev/null 2>&1; then
    printf "%s\\n" "you need to install 'curl' to run this program" >&2
    exit 1
fi

_uimg "${@}"
