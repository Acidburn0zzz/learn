#!/bin/sh
#description: show welcome information in minos
#usage: minos-welcome

[ -f "${HOME}"/.minos/welcomed ] && exit

_usage()
{
    printf "%s\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') [options]" >&2
    printf "%s\\n" "Minos welcome window." >&2
    printf "\\n" >&2
    printf "%s\\n" "  -h, --help   show this help message and exit" >&2
    exit 1
}

_whereis()
{
    [ -z "${1}" ] && return 1
    if ! command -v "${1}" 2>/dev/null; then
        return 1
    fi
}

_notify()
{
    [ -z "${1}" ] && return 1
    if [ X"${TERM}" = X"linux" ] || [ -z "${TERM}" ]; then
        kill -9 $(pgrep notify-osd) >/dev/null 2>&1
        if ! DISPLAY=:0 notify-send -t 1000 "${1}"  "${2}"; then
            if command -v "gxmessage" 2>/dev/null; then
                font="Monaco 9"
                gxmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            else
                font="fixed"
                xmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            fi
        fi
    else
        if [ -z "${2}" ]; then
            printf "%s\\n" "${1}"
        else
            printf "%s: %s\\n" "${1}" "${2}"
        fi
    fi
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- $(for arg in "${@}"; do printf "%s\\n" "${arg}"; done) $(cat)
fi

for arg; do #parse options
    case "${arg}" in
        --) shift;   break  ;;
        -h|--help)   _usage ;;
        -*) printf "$(expr "${0}" : '.*/\([^/]*\)'): unrecognized option \`${arg}'\\n" >&2; _usage ;;
    esac
done

_notify "Welcome" "Press F1 to start"
mkdir ~/.minos/ 2>/dev/null; touch ~/.minos/welcomed
