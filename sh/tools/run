#!/bin/sh
#description: notifies when a command has finished
#usage: run command

#example: run ping -c 3 google.com
#ping output

_usage()
{
    printf "%s\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') [options] command" >&2
    printf "%s\\n" "Notifies when a commend is done." >&2
    printf "\\n" >&2
    printf "%s\\n" "  -h,--help   show this help message and exit" >&2
    exit 1
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- $(for arg in "${@}"; do printf "%s\\n" "${arg}"; done) $(cat)
fi

for arg; do #parse options
    case "${arg}" in
        --) shift; break  ;;
        -h|--help) _usage ;;
        -c) CFLAG="true"; shift; PATTERN="${@}";;
        -*) printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): unrecognized option \`${arg}'" >&2; _usage ;;
    esac
done

[ "${#}" -eq "0" ] && _usage

"${@}"
error="${?}"

if [ "${error}" -eq "0" ]; then
    kill -9 $(pgrep notify-osd) >/dev/null 2>&1
    notify-send "$(hostname -s) | terminated:" "${1}" -i finish -t 0
else
    kill -9 $(pgrep notify-osd) >/dev/null 2>&1
    notify-send "$(hostname -s) | error:" "${1}" -u critical -i undo -t 0
    exit "${error}"
fi
