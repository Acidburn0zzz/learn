#!/bin/sh
#description: translate string
#usage: translate [options] string

#example: translate -en-es "hello world"
#hola mundo
#example: translate -es "hola mundo"
#hello world
#example: translate -pt-es "oi mundo"
#hola mundo
#example: translate "hola mundo"
#hello world

_usage()
{
    printf "%s\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') [-sl-tl] string ..." >&2
    printf "%s\\n" "Translate strings using google online translator." >&2
    printf "\\n" >&2
    printf "%s\\n" "  sl   source language (auto by default)" >&2
    printf "%s\\n" "  tl   target language (english by default)" >&2
    exit 1
}

_translate()
{
    [ -z "${1}" ] && return 1
    #update 14-12-2012 05:06: http://crunchbang.org/forums/viewtopic.php?id=17034
    _translate__phrase="${*}"
    _translate__page="$(curl -s -i --user-agent "" -d "sl=${sl}" -d "tl=${tl}"      \
                           -d "client=t"  -d "ie=UTF-8" -d "oe=UTF-8" --data-urlencode \
                           "text=${_translate__phrase}" http://translate.google.com/translate_a/t)"
    _translate__result="$(printf "%s\\n" "${_translate__page}" | tail -1 | cut -d\" -f2)"

    if command -v "xclip" >/dev/null 2>&1; then
        if [ ! -t 1 ]; then
            printf "%s\\n" "${_translate__result}"
        else
            printf "%s" "${_translate__result}" | xclip -selection clipboard; xclip -o -selection clipboard; printf "\\n"
        fi
    else
        printf "%s\\n" "${_translate__result}"
    fi
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- "${@}" $(cat)
fi

[ "${#}" -eq "0" ] && _usage

case "${1}" in
    --) shift; break  ;;
    -h|--help) _usage ;;
    -*) sl="$(printf "%s" "${1}" | cut -d'-' -f2)"
        tl="$(printf "%s" "${1}" | cut -d'-' -f3)"
        if [ -z "${sl}" ] && [ -z "${tl}" ]; then
            #maybe returning an error message is better
            sl="auto"; tl="en";
        elif [ -n "${sl}" ] && [ -z "${tl}" ]; then
            tl="en";
        fi
        shift ;;
    *)  sl="auto"; tl="en"; ;;
esac

if ! command -v "curl" >/dev/null 2>&1; then
    printf "%s\\n" "you need to install 'curl' to run this program" >&2
    exit 1
fi

_translate "${@}"
