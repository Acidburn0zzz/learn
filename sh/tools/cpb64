#!/bin/sh
#description: helper to copy files through systems without scp
#             http://rrr.thetruth.de/2009/04/remote-copy-without-scp/
#usage: cpb64 file[s]

#example: cpb64 ~/.bashrc
#output-to-copy
#to-a-remote-shell
#...

_cpb64()
{
    for file; do
        [ ! -r "${file}" ] && { printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): '${file}' does not exist or is not readable" >&2; exit 1; }
    done

    str="$(tar cf - "${@}" | gzip | openssl enc -base64)"
    line1="cat<<E=O=F | openssl enc -base64 -d | zcat | tar xvf -"
    line2="${str}"
    line3="E=O=F"

    cmd="${line1}"'\n'"${line2}"'\n'"${line3}"'\n'

    if command -v "xclip" >/dev/null 2>&1; then
        if [ ! -t 1 ] || [ -z "${DISPLAY}" ]; then
            printf "%b" "${cmd}"
        else
            printf "%b" "${cmd}" | xclip -selection clipboard; xclip -o -selection clipboard
        fi
    else
        printf "%b" "${cmd}"
    fi
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- "${@}" $(cat)
fi

[ "${#}" -eq "0" ] && { printf "Usage: %s\\n" "$(expr "${0}" : '.*/\([^/]*\)') file ..." >&2; exit 1; }

for arg; do #parse options
    case "${arg}" in
        --) shift; break ;;
        -h|--help) { printf "Usage: %s\\n" "$(expr "${0}" : '.*/\([^/]*\)') file ..." >&2; exit 1; } ;;
        -*) printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): unrecognized option \`${arg}'" >&2
            printf "Usage: %s\\n" "$(expr "${0}" : '.*/\([^/]*\)') file ..." >&2
            exit 1
            ;;
    esac
done

_cpb64 "${@}"
