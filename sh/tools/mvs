#!/bin/sh
# Copyright (C) 2007-2010 by Jonas Kramer. All rights reserved.
# Copyright (C) 2013-2014 by Javier Lopez. All rights reserved.
# Published under the terms of the GNU General Public License (GPL).

# Rename lots of files using your favorite text editor.
# Original: https://github.com/jkramer/virn

#examples
# mvs *
# mvs a*

_usage()
{
    printf "%s\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') [options] file ..." >&2
    printf "%s\\n" "Rename lots of files using your favorite text editor." >&2
    printf "\\n" >&2
    printf "%b\\n" "  -e, --editor   use this editor instead of the default \$EDITOR" >&2
    printf "%b\\n" "  -h, --help     show this help message and exit" >&2
    exit 1
}

_die()
{
    [ -z "${1}" ] && return 1
    printf "%b\\n" "$(expr "${0}" : '.*/\([^/]*\)'): ${*}" >&2
    exit 1
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- "${@}" $(cat)
fi

[ "${#}" -eq "0" ] && _usage

for arg; do #parse options
    case "${arg}" in
        -h|--help) _usage ;;
        -e|--editor)if [ "${#}" -gt "1" ]; then
                        editor="$(printf "%s " "${@}" | awk '{print $2}')"
                        shift 2
                    else
                        _die "Option \`${arg}' requires a parameter"
                    fi ;;
        -*) printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): unrecognized option \`${arg}'" >&2; _usage ;;
    esac
done

[ -z "${editor}" ] && editor="${EDITOR}"
[ -z "${EDITOR}" ] && _die "\${EDITOR} not defined."

# Create targets file.
targets="/tmp/mvs-${$}"
for FILE; do printf "%s\\n" "${FILE}" >> "${targets}"; done

# Start $EDITOR
if ${editor} ${targets}; then
        [ ! -t 0 ] && reset
        count="$(wc -l "${targets}" | grep -o -E '^[0-9]+')"

        # Exit with error message if number of arguments and line count of
        # targets file differ.
        if [ "${count}" -ne "${#}" ]; then
            rm -- "${targets}"
            _die 'Numbers of files mismatch.'
        fi

        # Read targets file line by line and rename the source
        # files from ARGV appropriately.
        while read target; do
            source="${1}"
            shift
            if [ X"${source}" != X"${target}" ]; then
                mv -v -f -- "${source}" "${target}"
            fi
        done < "${targets}"
fi

rm "${targets}"
