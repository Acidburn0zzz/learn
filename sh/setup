#!/usr/bin/env bash
#<chilicuil@gmail.com> 2012
#setup custom tasks

#I love colors!
BLUE=$'\E[0;34m'
DEFAULT=$'\E[0m'
RED=$'\E[0;31m'
BROWN=$'\E[0;33m'
CYAN=$'\E[0;36m'
DARK_GREY=$'\E[1;30m'
GREEN=$'\E[0;32m'
LIGHT_BLUE=$'\E[1;34m'
LIGHT_CYAN=$'\E[1;36m'
LIGHT_GREEN=$'\E[1;32m'
LIGHT_GREY=$'\E[0;37m'
LIGHT_PURPLE=$'\E[1;35m'
LIGHT_RED=$'\E[1;31m'
PURPLE=$'\E[1;35m'
WHITE=$'\E[1;37m'
YELLOW=$'\E[0;33m'

#fancy output, taken mainly from /etc/lsb-base-logging.sh
COLS=`tput cols`
if [ "$COLS" ] && [ "$COLS" -gt 6 ]; then
    COL=`expr $COLS - 8`
else
    COLS=80
    COL=72
fi

st()
{
    printf "\r"
    tput hpa $COL
    if [ $1 -ne 0 ]; then
            echo -e "$LIGHT_RED[FAILED]$DEFAULT"
            exit 1
        else
            echo -e "$LIGHT_GREEN[DONE]$DEFAULT"
    fi
}
#===================================================

#Don't forget update this when adding new functions
usage()
{
  echo -e "$(basename $0): setup my common tasks" >&2
  echo -e >&2
  echo -e "  autocp            cp custom autocomplete file" >&2
  #echo -e "  cake              Setup cake" >&2
  echo -e "  script            cp custom script to the path system" >&2
  echo -e "  latex             compile a .tex file -> pdf" >&2
  #echo -e "  intalio           Setup intalio" >&2
  echo -e >&2
  echo -e "All logs are saved to /tmp/setup.log, check it out in case of problems" >&2
  exit 1
}

script()
{

    if [[ -z "$1" ]]; then
        echo -e "$0: Missing argument, looking for a .sh|.py|.rb|etc script"
        exit 1
    fi

    echo -ne "$LIGHT_RED[*]$DEFAULT chmod +x $1"
    chmod +x $1 >> /tmp/setup.log 2>&1
    st $?

    echo -ne "$LIGHT_RED[*]$DEFAULT sudo cp $1 /usr/local/bin"
    sudo cp $1 /usr/local/bin >> /tmp/setup.log 2>&1
    st $?
    exit 0
}

autocp()
{
    if [[ -z "$1" ]]; then
        echo -e "$0: Missing parameter, looking for an .autocp file"
        exit 1
    fi

    echo -ne "$LIGHT_RED[*]$DEFAULT sudo cp $1 /etc/bash_completion.d/"
    sudo cp $1 /etc/bash_completion.d/ >> /tmp/setup.log 2>&1
    st $?
    exit 0
}

latex_()
{
    if [[ -z "$1" ]]; then
        echo -e "$0: Missing argument, looking for a .tex file"
        exit 1
    fi

    if [[ -z "$2" ]]; then
        more_than_one=1
    fi

    for file
    do
        if [ -e "$file" ] ; then
            current=$(basename $file .tex)
            echo -ne "$LIGHT_RED[*]$DEFAULT latex $current.tex"
            latex $current.tex >> /tmp/setup.log 2>&1
            st $?

            echo -ne "$LIGHT_RED[*]$DEFAULT dvips $current.dvi"
            dvips $current.dvi >> /tmp/setup.log 2>&1
            st $?

            echo -ne "$LIGHT_RED[*]$DEFAULT ps2pdf $current.ps"
            ps2pdf $current.ps >> /tmp/setup.log 2>&1
            st $?
            if [[ -z "$more_than_one" ]]; then
                echo -e "======================"
            fi
        fi
    done
    exit 0
}

#cake()
#{
    #echo -ne "$LIGHT_RED[*]$DEFAULT tar zxvf cake*.tar.gz"
    #tar zxvf cake*.tar.gz >> /tmp/init_cake.log 2>&1
    #st $?

    #echo -ne "$LIGHT_RED[*]$DEFAULT chmod -R 777 cake_*/app/tmp/"
    #chmod -R 777 cake_*/app/tmp/ >> /tmp/init_cake.log 2>&1
    #st $?

    #echo -ne "$LIGHT_RED[*]$DEFAULT cp cake_*/app/config/{database.php.default,database.php}"
    #cp cake_*/app/config/{database.php.default,database.php} >> /tmp/init_cake.log 2>&1
    #st $?

    #echo -ne "$LIGHT_RED[*]$DEFAULT cd cake_*"
    #cd cake_* >> /tmp/init_cake.log 2>&1
    #st $?

    #echo -ne "$LIGHT_RED[*]$DEFAULT vim app/config/{core.php,database.php} -o"
    #vim app/config/{core.php,database.php} -o
    #st $?
    #exit 0
#}

#intalio()
#{
    #IS_INTALIO=(intalio-bpms*.zip)

    #if [[ ! -e ${IS_INTALIO[0]} ]]; then
        #echo -ne "$LIGHT_RED[*]$DEFAULT ./intalio-bpms*.zip was not found"
        #false
        #st $?
        #exit 1
    #fi

    #echo -ne "$LIGHT_RED[*]$DEFAULT extract ${IS_INTALIO[0]}"
    #extract ${IS_INTALIO[0]} >> /tmp/setup.log 2>&1
    #st $?

    #echo -e "$LIGHT_RED[*]$DEFAULT setting up JAVA_HOME"

    #if [[ -z $JAVA_HOME ]]; then
        #echo -ne "$LIGHT_RED[+]$DEFAULT echo export JAVA_HOME=/usr/lib/jvm/java-6-sun > $HOME/.bashrc"
        #echo "export JAVA_HOME=/usr/lib/jvm/java-6-sun" > $HOME/.bashrc
        #st $?
    #else
        #echo -e "$LIGHT_RED[+]$DEFAULT JAVA_HOME is set to $JAVA_HOME, nothing to do..."
    #fi

    #echo -ne "$LIGHT_RED[*]$DEFAULT groovy.sh change_http_port"
    #cd ./intalio-bpms*/extras/; ./groovy.sh change_http_port.groovy

    #echo -ne "$LIGHT_RED[*]$DEFAULT Wanna start intalio now? y/n: "
    #read -e BOOT_INTALIO

    #if [[ "{$BOOT_INTALIO}" == "y" ]]; then
        #echo -ne "$LIGHT_RED[*]$DEFAULT ../bin/startup.sh"
        #../bin/startup.sh
        #echo -e "$LIGHT_RED[*]$DEFAULT Please be patient, tomcat may take some time to initializate..." 
        #echo -e "$LIGHT_RED[*]$DEFAULT Go to http://localhost:8080/bpms-console to start, have fun ^_^"
    #fi

    #echo -e "$LIGHT_RED[*]$DEFAULT Intalio has been setup but has not been booted, have fun ^_^" 

    #exit 0
#}

if [[ $# != 0 ]]; then
    echo "<= $(date --rfc-3339=seconds) => $1() <=========================" >> /tmp/setup.log
    case $1 in
        #cake)
        #cake
        #;;
        #intalio)
        #intalio
        #;;
        script)
        script $2
        ;;
        autocp)
        autocp $2
        ;;
        latex)
        shift; latex_ "$@" # remove the latex
        ;;
        -h | --help)
        usage
        ;;
        -v | --version)
        echo $VERSION
        ;;
        *)
        echo -e "Error, unknown option: \"$1\""
        usage
        ;;
    esac
else
    usage
fi
